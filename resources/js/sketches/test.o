{-# LINE 1 "C:\Users\Ivo\AppData\Local\Temp\ghc6424_0\ghc_4.s" #-}
.data
	.align 4
.align 1
.globl __stginit_Main
__stginit_Main:
.data
	.align 4
.align 1
.globl Main_main9_closure
Main_main9_closure:
	.long	Main_main9_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
c4ZL_str:
	.byte	101
	.byte	115
	.byte	102
	.byte	101
	.byte	114
	.byte	97
	.byte	0
.text
	.align 4,0x90
	.long	0
	.long	22
.globl Main_main9_info
Main_main9_info:
.Lc4ZM:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc4ZN
.Lc4ZO:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lc4ZK
.Lc4ZJ:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $c4ZL_str,8(%ebx)
	addl $-12,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.Lc4ZK:
	jmp *(%esi)
.Lc4ZN:
	jmp *-16(%ebx)
.data
	.align 4
.align 1
.globl Main_main8_closure
Main_main8_closure:
	.long	ghczmprim_GHCziTypes_Dzh_static_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
.data
	.align 4
.align 1
.globl Main_main7_closure
Main_main7_closure:
	.long	ghczmprim_GHCziTypes_Dzh_static_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	191
.data
	.align 4
.align 1
.globl Main_main6_closure
Main_main6_closure:
	.long	ThreeTypes_Vector3_static_info
	.long	Main_main8_closure+1
	.long	Main_main8_closure+1
	.long	Main_main7_closure+1
	.long	1
.data
	.align 4
.align 1
.globl Main_main5_closure
Main_main5_closure:
	.long	ghczmprim_GHCziTypes_Dzh_static_info
	.byte	154
	.byte	153
	.byte	153
	.byte	153
	.byte	153
	.byte	153
	.byte	185
	.byte	63
.data
	.align 4
.align 1
.globl Main_main4_closure
Main_main4_closure:
	.long	ThreeTypes_TranslateOnAxis_static_info
	.long	Main_main6_closure+1
	.long	Main_main5_closure+1
	.long	1
.data
	.align 4
.align 1
.globl Main_main3_closure
Main_main3_closure:
	.long	ghczmprim_GHCziTuple_Z2T_static_info
	.long	Main_main9_closure
	.long	Main_main4_closure+1
	.long	0
.data
	.align 4
.align 1
.globl Main_main2_closure
Main_main2_closure:
	.long	ghczmprim_GHCziTypes_ZC_static_info
	.long	Main_main3_closure+1
	.long	ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	0
.data
	.align 4
.align 1
.globl Main_main12_closure
Main_main12_closure:
	.long	Main_main12_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
c50f_str:
	.byte	99
	.byte	117
	.byte	98
	.byte	111
	.byte	0
.text
	.align 4,0x90
	.long	0
	.long	22
.globl Main_main12_info
Main_main12_info:
.Lc50g:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc50h
.Lc50i:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lc50e
.Lc50d:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $c50f_str,8(%ebx)
	addl $-12,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.Lc50e:
	jmp *(%esi)
.Lc50h:
	jmp *-16(%ebx)
.data
	.align 4
.align 1
.globl Main_main11_closure
Main_main11_closure:
	.long	ghczmprim_GHCziTuple_Z2T_static_info
	.long	Main_main12_closure
	.long	Main_main4_closure+1
	.long	0
.data
	.align 4
.align 1
.globl Main_main10_closure
Main_main10_closure:
	.long	ghczmprim_GHCziTypes_ZC_static_info
	.long	Main_main11_closure+1
	.long	ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	0
.data
	.align 4
.align 1
.globl Main_main14_closure
Main_main14_closure:
	.long	Main_main14_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
c50z_str:
	.byte	99
	.byte	97
	.byte	109
	.byte	97
	.byte	114
	.byte	97
	.byte	0
.text
	.align 4,0x90
	.long	0
	.long	22
.globl Main_main14_info
Main_main14_info:
.Lc50A:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc50B
.Lc50C:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lc50y
.Lc50x:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $c50z_str,8(%ebx)
	addl $-12,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.Lc50y:
	jmp *(%esi)
.Lc50B:
	jmp *-16(%ebx)
.data
	.align 4
.align 1
.globl Main_main13_closure
Main_main13_closure:
	.long	ghczmprim_GHCziTypes_Dzh_static_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	20
	.byte	64
.data
	.align 4
.align 1
.globl Main_main19_closure
Main_main19_closure:
	.long	Main_main19_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
c50R_str:
	.byte	108
	.byte	117
	.byte	122
	.byte	0
.text
	.align 4,0x90
	.long	0
	.long	22
.globl Main_main19_info
Main_main19_info:
.Lc50S:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc50T
.Lc50U:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lc50Q
.Lc50P:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $c50R_str,8(%ebx)
	addl $-12,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.Lc50Q:
	jmp *(%esi)
.Lc50T:
	jmp *-16(%ebx)
.data
	.align 4
.align 1
.globl Main_main18_closure
Main_main18_closure:
	.long	ThreeTypes_Vector3_static_info
	.long	Main_main8_closure+1
	.long	Main_main8_closure+1
	.long	Main_main13_closure+1
	.long	1
.data
	.align 4
.align 1
.globl Main_main17_closure
Main_main17_closure:
	.long	ThreeTypes_SetPosition_static_info
	.long	Main_main18_closure+1
	.long	1
.data
	.align 4
.align 1
.globl Main_main16_closure
Main_main16_closure:
	.long	ghczmprim_GHCziTuple_Z2T_static_info
	.long	Main_main19_closure
	.long	Main_main17_closure+1
	.long	0
.data
	.align 4
.align 1
.globl Main_main15_closure
Main_main15_closure:
	.long	ghczmprim_GHCziTypes_ZC_static_info
	.long	Main_main16_closure+1
	.long	ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	0
.data
	.align 4
.align 1
.globl Main_mainzuf1_closure
Main_mainzuf1_closure:
	.long	Main_mainzuf1_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
c51i_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	115
	.byte	44
	.byte	102
	.byte	41
	.byte	123
	.byte	72
	.byte	97
	.byte	115
	.byte	116
	.byte	101
	.byte	91
	.byte	115
	.byte	93
	.byte	32
	.byte	61
	.byte	32
	.byte	102
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 4,0x90
	.long	0
	.long	22
.globl Main_mainzuf1_info
Main_mainzuf1_info:
.Lc51k:
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc51r
.Lc51s:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lc51h
.Lc51g:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl c51i_str+3,%eax
	movl $c51o_info,-16(%ebp)
	addl $-16,%ebp
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call eval
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.Lc51h:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	0
	.long	32
c51o_info:
.Lc51o:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lc51v
.Lc51u:
	movl $base_GHCziPtr_Ptr_con_info,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
.Lc51r:
	jmp *-16(%ebx)
.Lc51v:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.data
	.align 4
.align 1
.globl Main_main1_closure
Main_main1_closure:
	.long	Main_main1_info
	.long	0
.text
	.align 4,0x90
	.long	1
	.long	17
s4Zc_info:
.Lc530:
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc537
.Lc538:
	movl $stg_upd_frame_info,-12(%ebp)
	movl %esi,-8(%ebp)
	movl $c52X_info,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne .Lc52X
.Lc52Y:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
.text
	.align 4,0x90
	.long	0
	.long	32
c52X_info:
.Lc52X:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .Lc53b
.Lc53a:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gldsd .Ln54X,%fake1
	fldl .Ln54X ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
	movl $ghczmprim_GHCziTypes_Dzh_con_info,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
.Lc537:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-16(%ebx)
.Lc53b:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp stg_gc_unpt_r1
.section .rodata
	.align 4
.align 8
.Ln54X:
	.byte	154
	.byte	153
	.byte	153
	.byte	153
	.byte	153
	.byte	153
	.byte	185
	.byte	63
.text
	.align 4,0x90
	.long	S54S_srt-(s4Zq_info)+0
	.long	65541
	.long	65536
	.long	8323083
s4Zq_info:
.Lc53i:
	movl 8(%ebx),%eax
	movl %esi,%ecx
	leal -4(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb .Lc53P
.Lc53Q:
	addl $64,%edi
	cmpl 856(%ebx),%edi
	ja .Lc53S
.Lc53R:
	movl $s4Zc_info,-60(%edi)
	movl %eax,-48(%edi)
	movl $ThreeTypes_Vector3_con_info,-44(%edi)
	movl $Main_main8_closure+1,-40(%edi)
	leal -60(%edi),%eax
	movl %eax,-36(%edi)
	movl $Main_main13_closure+1,-32(%edi)
	movl $ThreeTypes_SetPosition_con_info,-28(%edi)
	leal -43(%edi),%eax
	movl %eax,-24(%edi)
	movl $ghczmprim_GHCziTuple_Z2T_con_info,-20(%edi)
	movl $Main_main14_closure,-16(%edi)
	leal -27(%edi),%eax
	movl %eax,-12(%edi)
	movl $ghczmprim_GHCziTypes_ZC_con_info,-8(%edi)
	leal -19(%edi),%eax
	movl %eax,-4(%edi)
	movl $ghczmprim_GHCziTypes_ZMZN_closure+1,(%edi)
	movl $c53g_info,-4(%ebp)
	leal -6(%edi),%eax
	movl %eax,16(%ebx)
	movl $Main_main15_closure+2,8(%ebx)
	addl $-4,%ebp
	jmp base_GHCziBase_zpzp_info
.text
	.align 4,0x90
	.long	S54S_srt-(c53g_info)+0
	.long	0
	.long	2031648
c53g_info:
.Lc53g:
	movl $c53l_info,(%ebp)
	movl $Main_main10_closure+2,16(%ebx)
	movl %esi,8(%ebx)
	jmp base_GHCziBase_zpzp_info
.text
	.align 4,0x90
	.long	S54S_srt-(c53l_info)+0
	.long	0
	.long	1507360
c53l_info:
.Lc53l:
	movl $c53p_info,(%ebp)
	movl $Main_main2_closure+2,16(%ebx)
	movl %esi,8(%ebx)
	jmp base_GHCziBase_zpzp_info
.text
	.align 4,0x90
	.long	S54S_srt-(c53p_info)+0
	.long	0
	.long	458784
c53p_info:
.Lc53p:
	movl $c53t_info,(%ebp)
	movl $ghczmprim_GHCziTypes_ZMZN_closure+1,16(%ebx)
	movl %esi,8(%ebx)
	jmp base_GHCziBase_zpzp_info
.text
	.align 4,0x90
	.long	S54S_srt-(c53t_info)+0
	.long	0
	.long	458784
c53t_info:
.Lc53t:
	movl $c53x_info,(%ebp)
	movl $ghczmprim_GHCziTypes_ZMZN_closure+1,16(%ebx)
	movl %esi,8(%ebx)
	jmp base_GHCziList_reverse1_info
.text
	.align 4,0x90
	.long	S54S_srt-(c53x_info)+0
	.long	0
	.long	458784
c53x_info:
.Lc53x:
	movl $c53B_info,(%ebp)
	movl %esi,8(%ebx)
	jmp Update_batchTransformations_info
.text
	.align 4,0x90
	.long	S54S_srt-(c53B_info)+0
	.long	0
	.long	196640
c53B_info:
.Lc53B:
	movl $c53F_info,(%ebp)
	movl %esi,16(%ebx)
	movl $Update_tupleToJson_closure+1,8(%ebx)
	jmp base_GHCziBase_map_info
.text
	.align 4,0x90
	.long	S54S_srt-(c53F_info)+0
	.long	0
	.long	65568
c53F_info:
.Lc53F:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lc541
.Lc540:
	movl $LrLQCyBLGY7InbUyAdzzBrx_HasteziJSON_Dict_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $c53K_info,(%ebp)
	leal 1(%edi),%eax
	movl %eax,8(%ebx)
	jmp LrLQCyBLGY7InbUyAdzzBrx_HasteziJSON_zdwencodeJSON_info
.text
	.align 4,0x90
	.long	0
	.long	32
c53K_info:
.Lc53K:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lc544
.Lc543:
	movl $base_GHCziPtr_Ptr_con_info,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
.Lc53S:
	movl $64,904(%ebx)
.Lc53P:
	movl %eax,8(%ebx)
	movl %ecx,%esi
	jmp *-8(%ebx)
.Lc541:
	movl $8,904(%ebx)
	jmp stg_gc_unpt_r1
.Lc544:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.section .rodata
	.align 4
.align 1
c54s_str:
	.byte	117
	.byte	112
	.byte	100
	.byte	97
	.byte	116
	.byte	101
	.byte	115
	.byte	0
.text
	.align 4,0x90
	.long	S54S_srt-(Main_main1_info)+0
	.long	65539
	.long	0
	.long	33488911
.globl Main_main1_info
Main_main1_info:
.Lc546:
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc54h
.Lc54i:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lc54k
.Lc54j:
	movl $s4Zq_info,-4(%edi)
	movl $c54e_info,-4(%ebp)
	addl $-4,%ebp
	movl (%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,220(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,232(%esp)
	movl 104(%ecx),%eax
	movl %eax,244(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,256(%esp)
	movl 232(%esp),%edx
	subl %eax,%edx
	movl 244(%esp),%eax
	movl %edx,268(%esp)
	movl 256(%esp),%edx
	sbbl %edx,%eax
	movl 268(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $4,%esp
	movl 224(%esp),%ecx
	pushl %ecx
	pushl $1
	movl %eax,292(%esp)
	call __createJSFunc
	addl $12,%esp
	subl $8,%esp
	movl 288(%esp),%ecx
	pushl %ecx
	movl %eax,304(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,304(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,316(%esp)
	movl %eax,%ecx
	movl %edx,328(%esp)
	movl 316(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 304(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,340(%esp)
	movl 328(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 340(%esp),%ecx
	adcl %eax,%ecx
	movl 304(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 292(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	S54S_srt-(c54e_info)+28
	.long	0
	.long	65568
c54e_info:
.Lc54e:
	movl $c54g_info,-4(%ebp)
	movl %esi,%eax
	movl $Main_mainzuf1_closure,%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne .Lc54g
.Lc54n:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	65
	.long	32
c54g_info:
.Lc54g:
	movl c54s_str+3,%eax
	movl 4(%ebp),%ecx
	movl $c54z_info,4(%ebp)
	addl $4,%ebp
	movl 3(%esi),%edx
	movl %edx,64(%esp)
	movl 872(%ebx),%edx
	movl %eax,76(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,88(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,100(%esp)
	movl 104(%edx),%ecx
	movl %ecx,112(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,124(%esp)
	movl 100(%esp),%eax
	subl %ecx,%eax
	movl 112(%esp),%ecx
	movl %eax,136(%esp)
	movl 124(%esp),%eax
	sbbl %eax,%ecx
	movl 136(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	movl 88(%esp),%ecx
	pushl %ecx
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call __app2
	addl $12,%esp
	subl $8,%esp
	movl 156(%esp),%ecx
	pushl %ecx
	movl %eax,172(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,172(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,184(%esp)
	movl %eax,%ecx
	movl %edx,196(%esp)
	movl 184(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 172(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,208(%esp)
	movl 196(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 208(%esp),%ecx
	adcl %eax,%ecx
	movl 172(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 160(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.Lc54k:
	movl $8,904(%ebx)
.Lc54h:
	movl $Main_main1_closure,%esi
	jmp *-8(%ebx)
.text
	.align 4,0x90
	.long	0
	.long	32
c54z_info:
.Lc54z:
	addl $4,%ebp
	jmp DTkUIHCJaUgHU6UDGcO9WY_HasteziPrimziAny_zdfFromAnyZLZR4_info
.data
	.align 4
.align 1
.globl Main_main_closure
Main_main_closure:
	.long	Main_main_info
	.long	0
.text
	.align 4,0x90
	.long	S54S_srt-(Main_main_info)+32
	.long	65539
	.long	0
	.long	65551
.globl Main_main_info
Main_main_info:
.Lc55M:
	jmp Main_main1_info
.data
	.align 4
.align 1
.globl Main_main20_closure
Main_main20_closure:
	.long	Main_main20_info
	.long	0
.text
	.align 4,0x90
	.long	S54S_srt-(Main_main20_info)+32
	.long	65539
	.long	0
	.long	196623
.globl Main_main20_info
Main_main20_info:
.Lc55X:
	movl $Main_main1_closure+1,8(%ebx)
	jmp base_GHCziTopHandler_runMainIO1_info
.data
	.align 4
.align 1
.globl ZCMain_main_closure
ZCMain_main_closure:
	.long	ZCMain_main_info
	.long	0
.text
	.align 4,0x90
	.long	S54S_srt-(ZCMain_main_info)+40
	.long	65539
	.long	0
	.long	65551
.globl ZCMain_main_info
ZCMain_main_info:
.Lc568:
	jmp Main_main20_info
.section .data
	.align 4
.align 1
S54S_srt:
	.long	LrLQCyBLGY7InbUyAdzzBrx_HasteziJSON_zdwencodeJSON_closure
	.long	Update_tupleToJson_closure
	.long	Update_batchTransformations_closure
	.long	Main_main10_closure
	.long	Main_main2_closure
	.long	Main_main14_closure
	.long	Main_main15_closure
	.long	Main_mainzuf1_closure
	.long	Main_main1_closure
	.long	base_GHCziTopHandler_runMainIO1_closure
	.long	Main_main20_closure
.ident "GHC 7.10.2"

