{-# LINE 1 "C:\Users\Ivo\AppData\Local\Temp\ghc220_0\ghc_9.s" #-}
.data
	.align 4
.align 1
.globl __stginit_Main
__stginit_Main:
.data
	.align 4
.align 1
.globl Main_main10_closure
Main_main10_closure:
	.long	Main_main10_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
cds9_str:
	.byte	100
	.byte	105
	.byte	114
	.byte	76
	.byte	105
	.byte	103
	.byte	104
	.byte	116
	.byte	0
.text
	.align 4,0x90
	.long	0
	.long	22
.globl Main_main10_info
Main_main10_info:
.Lcdsa:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lcdsb
.Lcdsc:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lcds8
.Lcds7:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $cds9_str,8(%ebx)
	addl $-12,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.Lcds8:
	jmp *(%esi)
.Lcdsb:
	jmp *-16(%ebx)
.data
	.align 4
.align 1
.globl Main_main9_closure
Main_main9_closure:
	.long	ghczmprim_GHCziTypes_Dzh_static_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	8
	.byte	192
.data
	.align 4
.align 1
.globl Main_main8_closure
Main_main8_closure:
	.long	ghczmprim_GHCziTypes_Dzh_static_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	8
	.byte	64
.data
	.align 4
.align 1
.globl Main_main7_closure
Main_main7_closure:
	.long	ghczmprim_GHCziTypes_Dzh_static_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	20
	.byte	64
.data
	.align 4
.align 1
.globl Main_main6_closure
Main_main6_closure:
	.long	ThreeTypes_Vector3_static_info
	.long	Main_main9_closure+1
	.long	Main_main8_closure+1
	.long	Main_main7_closure+1
	.long	1
.data
	.align 4
.align 1
.globl Main_main5_closure
Main_main5_closure:
	.long	ThreeTypes_SetPosition_static_info
	.long	Main_main6_closure+1
	.long	1
.data
	.align 4
.align 1
.globl Main_main4_closure
Main_main4_closure:
	.long	ghczmprim_GHCziTuple_Z2T_static_info
	.long	Main_main10_closure
	.long	Main_main5_closure+1
	.long	0
.data
	.align 4
.align 1
.globl Main_main3_closure
Main_main3_closure:
	.long	ghczmprim_GHCziTypes_ZC_static_info
	.long	Main_main4_closure+1
	.long	ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	0
.data
	.align 4
.align 1
.globl Main_main16_closure
Main_main16_closure:
	.long	Main_main16_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
cdsD_str:
	.byte	99
	.byte	97
	.byte	109
	.byte	97
	.byte	114
	.byte	97
	.byte	0
.text
	.align 4,0x90
	.long	0
	.long	22
.globl Main_main16_info
Main_main16_info:
.LcdsE:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .LcdsF
.LcdsG:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .LcdsC
.LcdsB:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $cdsD_str,8(%ebx)
	addl $-12,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.LcdsC:
	jmp *(%esi)
.LcdsF:
	jmp *-16(%ebx)
.data
	.align 4
.align 1
.globl Main_main15_closure
Main_main15_closure:
	.long	ghczmprim_GHCziTypes_Dzh_static_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
.data
	.align 4
.align 1
.globl Main_main14_closure
Main_main14_closure:
	.long	ThreeTypes_Vector3_static_info
	.long	Main_main15_closure+1
	.long	Main_main8_closure+1
	.long	Main_main7_closure+1
	.long	1
.data
	.align 4
.align 1
.globl Main_main13_closure
Main_main13_closure:
	.long	ThreeTypes_SetPosition_static_info
	.long	Main_main14_closure+1
	.long	1
.data
	.align 4
.align 1
.globl Main_main12_closure
Main_main12_closure:
	.long	ghczmprim_GHCziTuple_Z2T_static_info
	.long	Main_main16_closure
	.long	Main_main13_closure+1
	.long	0
.data
	.align 4
.align 1
.globl Main_main11_closure
Main_main11_closure:
	.long	ghczmprim_GHCziTypes_ZC_static_info
	.long	Main_main12_closure+1
	.long	ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	0
.data
	.align 4
.align 1
.globl Main_main21_closure
Main_main21_closure:
	.long	ghczmprim_GHCziTypes_Dzh_static_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63
.data
	.align 4
.align 1
.globl Main_main20_closure
Main_main20_closure:
	.long	ThreeTypes_Vector3_static_info
	.long	Main_main15_closure+1
	.long	Main_main21_closure+1
	.long	Main_main15_closure+1
	.long	1
.data
	.align 4
.align 1
.globl Main_main19_closure
Main_main19_closure:
	.long	ThreeTypes_SetUp_static_info
	.long	Main_main20_closure+1
	.long	1
.data
	.align 4
.align 1
.globl Main_main18_closure
Main_main18_closure:
	.long	ghczmprim_GHCziTuple_Z2T_static_info
	.long	Main_main16_closure
	.long	Main_main19_closure+1
	.long	0
.data
	.align 4
.align 1
.globl Main_main17_closure
Main_main17_closure:
	.long	ghczmprim_GHCziTypes_ZC_static_info
	.long	Main_main18_closure+1
	.long	ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	0
.data
	.align 4
.align 1
.globl Main_main25_closure
Main_main25_closure:
	.long	ThreeTypes_Vector3_static_info
	.long	Main_main15_closure+1
	.long	Main_main15_closure+1
	.long	Main_main15_closure+1
	.long	1
.data
	.align 4
.align 1
.globl Main_main24_closure
Main_main24_closure:
	.long	ThreeTypes_LookAt_static_info
	.long	Main_main25_closure+1
	.long	1
.data
	.align 4
.align 1
.globl Main_main23_closure
Main_main23_closure:
	.long	ghczmprim_GHCziTuple_Z2T_static_info
	.long	Main_main16_closure
	.long	Main_main24_closure+1
	.long	0
.data
	.align 4
.align 1
.globl Main_main22_closure
Main_main22_closure:
	.long	ghczmprim_GHCziTypes_ZC_static_info
	.long	Main_main23_closure+1
	.long	ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	0
.data
	.align 4
.align 1
.globl Main_main31_closure
Main_main31_closure:
	.long	Main_main31_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
cdtl_str:
	.byte	109
	.byte	101
	.byte	115
	.byte	97
	.byte	0
.text
	.align 4,0x90
	.long	0
	.long	22
.globl Main_main31_info
Main_main31_info:
.Lcdtm:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lcdtn
.Lcdto:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lcdtk
.Lcdtj:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $cdtl_str,8(%ebx)
	addl $-12,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.Lcdtk:
	jmp *(%esi)
.Lcdtn:
	jmp *-16(%ebx)
.data
	.align 4
.align 1
.globl Main_main30_closure
Main_main30_closure:
	.long	ghczmprim_GHCziTypes_Dzh_static_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	224
	.byte	191
.data
	.align 4
.align 1
.globl Main_main29_closure
Main_main29_closure:
	.long	ThreeTypes_Vector3_static_info
	.long	Main_main15_closure+1
	.long	Main_main30_closure+1
	.long	Main_main15_closure+1
	.long	1
.data
	.align 4
.align 1
.globl Main_main28_closure
Main_main28_closure:
	.long	ThreeTypes_SetPosition_static_info
	.long	Main_main29_closure+1
	.long	1
.data
	.align 4
.align 1
.globl Main_main27_closure
Main_main27_closure:
	.long	ghczmprim_GHCziTuple_Z2T_static_info
	.long	Main_main31_closure
	.long	Main_main28_closure+1
	.long	0
.data
	.align 4
.align 1
.globl Main_main26_closure
Main_main26_closure:
	.long	ghczmprim_GHCziTypes_ZC_static_info
	.long	Main_main27_closure+1
	.long	ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	0
.data
	.align 4
.align 1
.globl Main_main33_closure
Main_main33_closure:
	.long	Main_main33_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
cdtL_str:
	.byte	98
	.byte	111
	.byte	108
	.byte	97
	.byte	0
.text
	.align 4,0x90
	.long	0
	.long	22
.globl Main_main33_info
Main_main33_info:
.LcdtM:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .LcdtN
.LcdtO:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .LcdtK
.LcdtJ:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $cdtL_str,8(%ebx)
	addl $-12,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.LcdtK:
	jmp *(%esi)
.LcdtN:
	jmp *-16(%ebx)
.data
	.align 4
.align 1
.globl Main_main32_closure
Main_main32_closure:
	.long	ghczmprim_GHCziTypes_Dzh_static_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	224
	.byte	63
.data
	.align 4
.align 1
.globl Main_mainzuf1_closure
Main_mainzuf1_closure:
	.long	Main_mainzuf1_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
cdu6_str:
	.byte	40
	.byte	102
	.byte	117
	.byte	110
	.byte	99
	.byte	116
	.byte	105
	.byte	111
	.byte	110
	.byte	40
	.byte	115
	.byte	44
	.byte	102
	.byte	41
	.byte	123
	.byte	72
	.byte	97
	.byte	115
	.byte	116
	.byte	101
	.byte	91
	.byte	115
	.byte	93
	.byte	32
	.byte	61
	.byte	32
	.byte	102
	.byte	59
	.byte	125
	.byte	41
	.byte	0
.text
	.align 4,0x90
	.long	0
	.long	22
.globl Main_mainzuf1_info
Main_mainzuf1_info:
.Lcdu8:
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lcduf
.Lcdug:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lcdu5
.Lcdu4:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl cdu6_str+3,%eax
	movl $cduc_info,-16(%ebp)
	addl $-16,%ebp
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,64(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,76(%esp)
	movl 104(%ecx),%eax
	movl %eax,88(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,100(%esp)
	movl 76(%esp),%edx
	subl %eax,%edx
	movl 88(%esp),%eax
	movl %edx,112(%esp)
	movl 100(%esp),%edx
	sbbl %edx,%eax
	movl 112(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $8,%esp
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,136(%esp)
	call eval
	addl $12,%esp
	subl $8,%esp
	movl 132(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,148(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,160(%esp)
	movl %eax,%ecx
	movl %edx,172(%esp)
	movl 160(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 148(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,184(%esp)
	movl 172(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 184(%esp),%ecx
	adcl %eax,%ecx
	movl 148(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 136(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.Lcdu5:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	0
	.long	32
cduc_info:
.Lcduc:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lcduj
.Lcdui:
	movl $base_GHCziPtr_Ptr_con_info,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
.Lcduf:
	jmp *-16(%ebx)
.Lcduj:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.data
	.align 4
.align 1
.globl Main_zdwa_closure
Main_zdwa_closure:
	.long	Main_zdwa_info
	.long	0
.text
	.align 4,0x90
	.long	1
	.long	17
sdrw_info:
.LcdvG:
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .LcdvR
.LcdvS:
	movl $stg_upd_frame_info,-12(%ebp)
	movl %esi,-8(%ebp)
	movl $cdvD_info,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne .LcdvD
.LcdvE:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
.text
	.align 4,0x90
	.long	0
	.long	32
cdvD_info:
.LcdvD:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .LcdvV
.LcdvU:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gldsd .Lndx3,%fake1
	fldl .Lndx3 ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gsinsd %fake0,%fake0
	pushl %eax;
fld %st(0); fsin
	fnstsw %ax
	test   $0x400,%eax
	je     .Lndx0
	ffree %st(7); fldpi
	fadd   %st(0),%st
	fxch   %st(1)
.Lndx1:
	fprem1
	fnstsw %ax
	test   $0x400,%eax
	jne    .Lndx1
	fstp   %st(1)
	fsin
.Lndx0:
	popl %eax;
	fstp %st(1)
	movl $ghczmprim_GHCziTypes_Dzh_con_info,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
.LcdvR:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-16(%ebx)
.LcdvV:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp stg_gc_unpt_r1
.section .rodata
	.align 4
.align 8
.Lndx3:
	.byte	154
	.byte	153
	.byte	153
	.byte	153
	.byte	153
	.byte	153
	.byte	169
	.byte	63
.text
	.align 4,0x90
	.long	1
	.long	17
sdrr_info:
.Lcdw3:
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lcdwe
.Lcdwf:
	movl $stg_upd_frame_info,-12(%ebp)
	movl %esi,-8(%ebp)
	movl $cdw0_info,-16(%ebp)
	movl 12(%esi),%esi
	addl $-16,%ebp
	testw $7,%si
	jne .Lcdw0
.Lcdw1:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
.text
	.align 4,0x90
	.long	0
	.long	32
cdw0_info:
.Lcdw0:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .Lcdwi
.Lcdwh:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gldsd .Lndxc,%fake1
	fldl .Lndxc ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gcossd %fake0,%fake0
	pushl %eax;
fld %st(0); fcos
	fnstsw %ax
	test   $0x400,%eax
	je     .Lndx9
	ffree %st(7); fldpi
	fadd   %st(0),%st
	fxch   %st(1)
.Lndxa:
	fprem1
	fnstsw %ax
	test   $0x400,%eax
	jne    .Lndxa
	fstp   %st(1)
	fcos
.Lndx9:
	popl %eax;
	fstp %st(1)
	movl $ghczmprim_GHCziTypes_Dzh_con_info,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
.Lcdwe:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-16(%ebx)
.Lcdwi:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp stg_gc_unpt_r1
.section .rodata
	.align 4
.align 8
.Lndxc:
	.byte	154
	.byte	153
	.byte	153
	.byte	153
	.byte	153
	.byte	153
	.byte	169
	.byte	63
.text
	.align 4,0x90
	.long	SdwW_srt-(sdrG_info)+0
	.long	1
	.long	4128785
sdrG_info:
.Lcdwp:
	movl %esi,%eax
	leal -16(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb .LcdwF
.LcdwG:
	addl $80,%edi
	cmpl 856(%ebx),%edi
	ja .LcdwI
.LcdwH:
	movl $stg_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl 12(%eax),%eax
	movl $sdrw_info,-76(%edi)
	movl %eax,-64(%edi)
	movl $sdrr_info,-60(%edi)
	movl %eax,-48(%edi)
	movl $ThreeTypes_Vector3_con_info,-44(%edi)
	leal -60(%edi),%eax
	movl %eax,-40(%edi)
	movl $Main_main32_closure+1,-36(%edi)
	leal -76(%edi),%eax
	movl %eax,-32(%edi)
	movl $ThreeTypes_SetPosition_con_info,-28(%edi)
	leal -43(%edi),%eax
	movl %eax,-24(%edi)
	movl $ghczmprim_GHCziTuple_Z2T_con_info,-20(%edi)
	movl $Main_main33_closure,-16(%edi)
	leal -27(%edi),%eax
	movl %eax,-12(%edi)
	movl $ghczmprim_GHCziTypes_ZC_con_info,-8(%edi)
	leal -19(%edi),%eax
	movl %eax,-4(%edi)
	movl $ghczmprim_GHCziTypes_ZMZN_closure+1,(%edi)
	movl $cdwn_info,-16(%ebp)
	movl $Main_main26_closure+2,16(%ebx)
	leal -6(%edi),%eax
	movl %eax,8(%ebx)
	addl $-16,%ebp
	jmp base_GHCziBase_zpzp_info
.text
	.align 4,0x90
	.long	SdwW_srt-(cdwn_info)+0
	.long	0
	.long	983072
cdwn_info:
.Lcdwn:
	movl $cdws_info,(%ebp)
	movl $Main_main22_closure+2,16(%ebx)
	movl %esi,8(%ebx)
	jmp base_GHCziBase_zpzp_info
.text
	.align 4,0x90
	.long	SdwW_srt-(cdws_info)+0
	.long	0
	.long	458784
cdws_info:
.Lcdws:
	movl $cdww_info,(%ebp)
	movl $Main_main17_closure+2,16(%ebx)
	movl %esi,8(%ebx)
	jmp base_GHCziBase_zpzp_info
.text
	.align 4,0x90
	.long	SdwW_srt-(cdww_info)+0
	.long	0
	.long	196640
cdww_info:
.Lcdww:
	movl $cdwA_info,(%ebp)
	movl $Main_main11_closure+2,16(%ebx)
	movl %esi,8(%ebx)
	jmp base_GHCziBase_zpzp_info
.text
	.align 4,0x90
	.long	SdwW_srt-(cdwA_info)+0
	.long	0
	.long	65568
cdwA_info:
.LcdwA:
	movl $cdwE_info,(%ebp)
	movl $Main_main3_closure+2,16(%ebx)
	movl %esi,8(%ebx)
	jmp base_GHCziBase_zpzp_info
.text
	.align 4,0x90
	.long	0
	.long	32
cdwE_info:
.LcdwE:
	movl $ghczmprim_GHCziTypes_ZMZN_closure+1,16(%ebx)
	movl %esi,8(%ebx)
	addl $4,%ebp
	jmp base_GHCziBase_zpzp_info
.LcdwI:
	movl $80,904(%ebx)
.LcdwF:
	movl %eax,%esi
	jmp *-16(%ebx)
.text
	.align 4,0x90
	.long	SdwW_srt-(Main_zdwa_info)+0
	.long	65541
	.long	0
	.long	8323087
.globl Main_zdwa_info
Main_zdwa_info:
.LcdwR:
	addl $16,%edi
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja .LcdwV
.LcdwU:
	movl $sdrG_info,-12(%edi)
	movl %eax,(%edi)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	movl $ghczmprim_GHCziTuple_Z0T_closure+1,%esi
	jmp *(%ebp)
.LcdwV:
	movl $16,904(%ebx)
	movl %eax,8(%ebx)
	movl $Main_zdwa_closure,%esi
	jmp *-8(%ebx)
.data
	.align 4
.align 1
.globl Main_main2_closure
Main_main2_closure:
	.long	Main_main2_info
	.long	0
.text
	.align 4,0x90
	.long	SdwW_srt-(Main_main2_info)+24
	.long	65541
	.long	0
	.long	196623
.globl Main_main2_info
Main_main2_info:
.LcdxA:
	movl 8(%ebx),%eax
	leal -4(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb .LcdxB
.LcdxC:
	movl $cdxx_info,-4(%ebp)
	movl %eax,8(%ebx)
	addl $-4,%ebp
	jmp Main_zdwa_info
.text
	.align 4,0x90
	.long	0
	.long	32
cdxx_info:
.Lcdxx:
	addl $12,%edi
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja .LcdxF
.LcdxE:
	movl $ghczmprim_GHCziTuple_Z2T_con_info,-8(%edi)
	movl %esi,-4(%edi)
	movl %eax,(%edi)
	leal -7(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
.LcdxB:
	movl %eax,8(%ebx)
	movl $Main_main2_closure,%esi
	jmp *-8(%ebx)
.LcdxF:
	movl $12,904(%ebx)
	movl %eax,8(%ebx)
	jmp stg_gc_pp
.data
	.align 4
.align 1
.globl Main_main1_closure
Main_main1_closure:
	.long	Main_main1_info
	.long	0
.text
	.align 4,0x90
	.long	SdwW_srt-(sdrO_info)+28
	.long	65541
	.long	65536
	.long	196619
sdrO_info:
.Lcdya:
	movl 8(%ebx),%eax
	leal -4(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb .Lcdye
.Lcdyf:
	movl $cdy8_info,-4(%ebp)
	movl %eax,16(%ebx)
	movl $Main_main2_closure+1,8(%ebx)
	addl $-4,%ebp
	jmp ThreeUpdate_zdwcreateUpdateFunction_info
.text
	.align 4,0x90
	.long	0
	.long	32
cdy8_info:
.Lcdy8:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lcdyi
.Lcdyh:
	movl $base_GHCziPtr_Ptr_con_info,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
.Lcdye:
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
.Lcdyi:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.section .rodata
	.align 4
.align 1
cdyG_str:
	.byte	117
	.byte	112
	.byte	100
	.byte	97
	.byte	116
	.byte	101
	.byte	115
	.byte	0
.text
	.align 4,0x90
	.long	SdwW_srt-(Main_main1_info)+28
	.long	65539
	.long	0
	.long	983055
.globl Main_main1_info
Main_main1_info:
.Lcdyk:
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lcdyv
.Lcdyw:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lcdyy
.Lcdyx:
	movl $sdrO_info,-4(%edi)
	movl $cdys_info,-4(%ebp)
	addl $-4,%ebp
	movl (%edi),%eax
	movl 872(%ebx),%ecx
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,220(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,232(%esp)
	movl 104(%ecx),%eax
	movl %eax,244(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,256(%esp)
	movl 232(%esp),%edx
	subl %eax,%edx
	movl 244(%esp),%eax
	movl %edx,268(%esp)
	movl 256(%esp),%edx
	sbbl %edx,%eax
	movl 268(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $4,%esp
	movl 224(%esp),%ecx
	pushl %ecx
	pushl $1
	movl %eax,292(%esp)
	call __createJSFunc
	addl $12,%esp
	subl $8,%esp
	movl 288(%esp),%ecx
	pushl %ecx
	movl %eax,304(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,304(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,316(%esp)
	movl %eax,%ecx
	movl %edx,328(%esp)
	movl 316(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 304(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,340(%esp)
	movl 328(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 340(%esp),%ecx
	adcl %eax,%ecx
	movl 304(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 292(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	SdwW_srt-(cdys_info)+40
	.long	0
	.long	65568
cdys_info:
.Lcdys:
	movl $cdyu_info,-4(%ebp)
	movl %esi,%eax
	movl $Main_mainzuf1_closure,%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne .Lcdyu
.LcdyB:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	65
	.long	32
cdyu_info:
.Lcdyu:
	movl cdyG_str+3,%eax
	movl 4(%ebp),%ecx
	movl $cdyN_info,4(%ebp)
	addl $4,%ebp
	movl 3(%esi),%edx
	movl %edx,64(%esp)
	movl 872(%ebx),%edx
	movl %eax,76(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,88(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,100(%esp)
	movl 104(%edx),%ecx
	movl %ecx,112(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,124(%esp)
	movl 100(%esp),%eax
	subl %ecx,%eax
	movl 112(%esp),%ecx
	movl %eax,136(%esp)
	movl 124(%esp),%eax
	sbbl %eax,%ecx
	movl 136(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	movl 88(%esp),%ecx
	pushl %ecx
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call __app2
	addl $12,%esp
	subl $8,%esp
	movl 156(%esp),%ecx
	pushl %ecx
	movl %eax,172(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,172(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,184(%esp)
	movl %eax,%ecx
	movl %edx,196(%esp)
	movl 184(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 172(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,208(%esp)
	movl 196(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 208(%esp),%ecx
	adcl %eax,%ecx
	movl 172(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 160(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.Lcdyy:
	movl $8,904(%ebx)
.Lcdyv:
	movl $Main_main1_closure,%esi
	jmp *-8(%ebx)
.text
	.align 4,0x90
	.long	0
	.long	32
cdyN_info:
.LcdyN:
	addl $4,%ebp
	jmp DTkUIHCJaUgHU6UDGcO9WY_HasteziPrimziAny_zdfFromAnyZLZR4_info
.data
	.align 4
.align 1
.globl Main_main_closure
Main_main_closure:
	.long	Main_main_info
	.long	0
.text
	.align 4,0x90
	.long	SdwW_srt-(Main_main_info)+36
	.long	65539
	.long	0
	.long	65551
.globl Main_main_info
Main_main_info:
.LcdzN:
	jmp Main_main1_info
.data
	.align 4
.align 1
.globl Main_main34_closure
Main_main34_closure:
	.long	Main_main34_info
	.long	0
.text
	.align 4,0x90
	.long	SdwW_srt-(Main_main34_info)+36
	.long	65539
	.long	0
	.long	327695
.globl Main_main34_info
Main_main34_info:
.LcdzY:
	movl $Main_main1_closure+1,8(%ebx)
	jmp base_GHCziTopHandler_runMainIO1_info
.data
	.align 4
.align 1
.globl ZCMain_main_closure
ZCMain_main_closure:
	.long	ZCMain_main_info
	.long	0
.text
	.align 4,0x90
	.long	SdwW_srt-(ZCMain_main_info)+48
	.long	65539
	.long	0
	.long	65551
.globl ZCMain_main_info
ZCMain_main_info:
.LcdA9:
	jmp Main_main34_info
.section .data
	.align 4
.align 1
SdwW_srt:
	.long	Main_main3_closure
	.long	Main_main11_closure
	.long	Main_main17_closure
	.long	Main_main22_closure
	.long	Main_main26_closure
	.long	Main_main33_closure
	.long	Main_zdwa_closure
	.long	Main_main2_closure
	.long	ThreeUpdate_zdwcreateUpdateFunction_closure
	.long	Main_main1_closure
	.long	Main_mainzuf1_closure
	.long	base_GHCziTopHandler_runMainIO1_closure
	.long	Main_main34_closure
.ident "GHC 7.10.2"

